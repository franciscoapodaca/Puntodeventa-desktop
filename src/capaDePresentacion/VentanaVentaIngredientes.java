/*
 * To change this template, choose Tools | Templates
 * and open the template inicializalista the editor.
 */
package capaDePresentacion;

import capaDeDatos.Vaso;
import capaDeDatos.Ingrediente;
import capaDeNegocios.IFacade;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Z470
 */
public class VentanaVentaIngredientes extends javax.swing.JFrame {

    ResultSet rs;
    Vaso vaso;
    Ingrediente ingrediente;
    ResultSet rs2;
    static double costo = 0;
    String ingredientes;
    ArrayList<String> listaCombo = new ArrayList<>();
    int posicion = 0;
    IFacade facade = new IFacade();

    public VentanaVentaIngredientes() throws SQLException {
        initComponents();

        this.setLocationRelativeTo(null);
        this.unlock1.setEnabled(false);
        this.unlock2.setEnabled(false);
        this.unlock3.setEnabled(false);
        this.unlock4.setEnabled(false);
        this.unlock5.setEnabled(false);
        this.unlock6.setEnabled(false);
        this.unlock7.setEnabled(false);
        this.unlock8.setEnabled(false);
        this.unlock9.setEnabled(false);
        this.unlock10.setEnabled(false);
        rs = facade.SeleccionarIngredientes();
        rs2 = facade.SeleccionarVasos();
        while (rs.next()) {

            listaCombo.add(rs.getString("nombre"));
        }
        while (rs2.next()) {
            this.comboVaso.addItem(rs2.getString("tamaño"));
        }

        rs.close();
        rs2.close();
        for (String string : listaCombo) {
            combo1.addItem(string);
            combo2.addItem(string);
            combo3.addItem(string);
            combo4.addItem(string);
            combo5.addItem(string);
            combo6.addItem(string);
            combo7.addItem(string);
            combo8.addItem(string);
            combo9.addItem(string);

            combo10.addItem(string);

        }

    }

    public void añadirAgregados() {
        for (int i = 0; i < lista.size(); i++) {
            String x = (String) lista.get(i);
            if (x != null) {
                listaCombo.add(x);
            }
        }
    }

    public void remueveItems() {

        combo1.removeAllItems();
        combo2.removeAllItems();
        combo3.removeAllItems();
        combo4.removeAllItems();
        combo5.removeAllItems();
        combo6.removeAllItems();
        combo7.removeAllItems();
        combo8.removeAllItems();
        combo9.removeAllItems();
        combo10.removeAllItems();
    }

    public void updateCombos() {
        Collections.sort(listaCombo);
        if (!listaCombo.isEmpty()) {
            for (String string : listaCombo) {
                combo1.addItem(string);
                combo2.addItem(string);
                combo3.addItem(string);
                combo4.addItem(string);
                combo5.addItem(string);
                combo6.addItem(string);
                combo7.addItem(string);
                combo8.addItem(string);
                combo9.addItem(string);
                combo10.addItem(string);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        unlock10 = new javax.swing.JButton();
        unlock9 = new javax.swing.JButton();
        unlock6 = new javax.swing.JButton();
        unlock8 = new javax.swing.JButton();
        unlock5 = new javax.swing.JButton();
        unlock2 = new javax.swing.JButton();
        unlock3 = new javax.swing.JButton();
        add8 = new javax.swing.JButton();
        combo8 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        combo7 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        add7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        combo6 = new javax.swing.JComboBox();
        combo5 = new javax.swing.JComboBox();
        combo4 = new javax.swing.JComboBox();
        combo3 = new javax.swing.JComboBox();
        combo2 = new javax.swing.JComboBox();
        combo1 = new javax.swing.JComboBox();
        add1 = new javax.swing.JButton();
        add2 = new javax.swing.JButton();
        add3 = new javax.swing.JButton();
        add4 = new javax.swing.JButton();
        add5 = new javax.swing.JButton();
        add10 = new javax.swing.JButton();
        add9 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        combo9 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        combo10 = new javax.swing.JComboBox();
        add6 = new javax.swing.JButton();
        comboVaso = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        botonListo = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista = new DefaultListModel();
        jList1 = new javax.swing.JList();
        unlock1 = new javax.swing.JButton();
        unlock4 = new javax.swing.JButton();
        unlock7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        botonSpicySalt = new javax.swing.JButton();
        botonSpicySweet = new javax.swing.JButton();
        botonSpicyHot = new javax.swing.JButton();
        botonSpicyDiablo = new javax.swing.JButton();
        botonRegresar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("VENTANA INGREDIENTES");
        setPreferredSize(new java.awt.Dimension(1028, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        unlock10.setText("Remover");
        unlock10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock10ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock10, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 500, -1, -1));

        unlock9.setText("Remover");
        unlock9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock9ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock9, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 450, -1, -1));

        unlock6.setText("Remover");
        unlock6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock6ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock6, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 300, -1, -1));

        unlock8.setText("Remover");
        unlock8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock8ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock8, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 400, -1, -1));

        unlock5.setText("Remover");
        unlock5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock5ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock5, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 260, -1, -1));

        unlock2.setText("Remover");
        unlock2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock2ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 140, -1, -1));

        unlock3.setText("Remover");
        unlock3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock3ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 180, -1, -1));

        add8.setText("Agregar");
        add8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add8ActionPerformed(evt);
            }
        });
        getContentPane().add(add8, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 400, -1, -1));

        combo8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo8ActionPerformed(evt);
            }
        });
        getContentPane().add(combo8, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 400, 278, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Ingrediente8:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 400, -1, -1));

        combo7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo7ActionPerformed(evt);
            }
        });
        getContentPane().add(combo7, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 350, 278, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Ingrediente7:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, -1, -1));

        add7.setText("Agregar");
        add7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add7ActionPerformed(evt);
            }
        });
        getContentPane().add(add7, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 350, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Ingrediente1:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Ingrediente2:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Ingrediente3:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Ingrediente4:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Ingrediente5:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Ingrediente6:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, -1, -1));

        combo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo6ActionPerformed(evt);
            }
        });
        getContentPane().add(combo6, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, 278, -1));
        getContentPane().add(combo5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, 278, -1));
        getContentPane().add(combo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, 278, -1));

        getContentPane().add(combo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, 278, -1));

        combo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo2ActionPerformed(evt);
            }
        });
        getContentPane().add(combo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 140, 278, -1));

        combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1ActionPerformed(evt);
            }
        });
        getContentPane().add(combo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 278, -1));

        add1.setText("Agregar");
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });
        getContentPane().add(add1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 100, -1, -1));

        add2.setText("Agregar");
        add2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add2ActionPerformed(evt);
            }
        });
        getContentPane().add(add2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 140, -1, -1));

        add3.setText("Agregar");
        add3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add3ActionPerformed(evt);
            }
        });
        getContentPane().add(add3, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 180, -1, -1));

        add4.setText("Agregar");
        add4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add4ActionPerformed(evt);
            }
        });
        getContentPane().add(add4, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 220, -1, -1));

        add5.setText("Agregar");
        add5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add5ActionPerformed(evt);
            }
        });
        getContentPane().add(add5, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 260, -1, -1));

        add10.setText("Agregar");
        add10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add10ActionPerformed(evt);
            }
        });
        getContentPane().add(add10, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 500, -1, -1));

        add9.setText("Agregar");
        add9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add9ActionPerformed(evt);
            }
        });
        getContentPane().add(add9, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 450, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Ingrediente9:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, -1, -1));

        combo9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo9ActionPerformed(evt);
            }
        });
        getContentPane().add(combo9, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 450, 278, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Ingrediente10:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 500, -1, -1));

        combo10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo10ActionPerformed(evt);
            }
        });
        getContentPane().add(combo10, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 500, 277, -1));

        add6.setText("Agregar");
        add6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add6ActionPerformed(evt);
            }
        });
        getContentPane().add(add6, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 300, -1, -1));

        comboVaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboVasoActionPerformed(evt);
            }
        });
        getContentPane().add(comboVaso, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 280, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Tamaño del Vaso:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, -1, -1));

        botonListo.setText("Listo");
        botonListo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListoActionPerformed(evt);
            }
        });
        getContentPane().add(botonListo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 72, 36));

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(botonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 96, 40));

        jList1.setModel(lista);
        jList1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jScrollPane2.setViewportView(jList1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 277, 273));

        unlock1.setText("Remover");
        unlock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock1ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 100, -1, 26));

        unlock4.setText("Remover");
        unlock4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock4ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock4, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 220, -1, 26));

        unlock7.setText("Remover");
        unlock7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlock7ActionPerformed(evt);
            }
        });
        getContentPane().add(unlock7, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 350, -1, -1));

        jPanel1.setBackground(new java.awt.Color(177, 208, 108));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null), "Paquetes Determinados"));

        botonSpicySalt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Salt1.png"))); // NOI18N
        botonSpicySalt.setText("\n");
        botonSpicySalt.setBorder(null);
        botonSpicySalt.setBorderPainted(false);
        botonSpicySalt.setContentAreaFilled(false);
        botonSpicySalt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonSpicySalt.setFocusPainted(false);
        botonSpicySalt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonSpicySalt.setIconTextGap(-3);
        botonSpicySalt.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Salt2.png"))); // NOI18N
        botonSpicySalt.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Salt2.png"))); // NOI18N
        botonSpicySalt.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        botonSpicySalt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonSpicySalt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSpicySaltActionPerformed(evt);
            }
        });

        botonSpicySweet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Sweet1.png"))); // NOI18N
        botonSpicySweet.setText(" ");
        botonSpicySweet.setBorder(null);
        botonSpicySweet.setBorderPainted(false);
        botonSpicySweet.setContentAreaFilled(false);
        botonSpicySweet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonSpicySweet.setFocusPainted(false);
        botonSpicySweet.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonSpicySweet.setIconTextGap(-3);
        botonSpicySweet.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Sweet2.png"))); // NOI18N
        botonSpicySweet.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Sweet2.png"))); // NOI18N
        botonSpicySweet.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        botonSpicySweet.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonSpicySweet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSpicySweetActionPerformed(evt);
            }
        });

        botonSpicyHot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Hot 1.png"))); // NOI18N
        botonSpicyHot.setText("\n");
        botonSpicyHot.setBorder(null);
        botonSpicyHot.setBorderPainted(false);
        botonSpicyHot.setContentAreaFilled(false);
        botonSpicyHot.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonSpicyHot.setFocusPainted(false);
        botonSpicyHot.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonSpicyHot.setIconTextGap(-3);
        botonSpicyHot.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Hot 2.png"))); // NOI18N
        botonSpicyHot.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Hot 2.png"))); // NOI18N
        botonSpicyHot.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        botonSpicyHot.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonSpicyHot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSpicyHotActionPerformed(evt);
            }
        });

        botonSpicyDiablo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Diablo 1.png"))); // NOI18N
        botonSpicyDiablo.setText("\n");
        botonSpicyDiablo.setBorder(null);
        botonSpicyDiablo.setBorderPainted(false);
        botonSpicyDiablo.setContentAreaFilled(false);
        botonSpicyDiablo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonSpicyDiablo.setFocusPainted(false);
        botonSpicyDiablo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonSpicyDiablo.setIconTextGap(-3);
        botonSpicyDiablo.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Diablo 2.png"))); // NOI18N
        botonSpicyDiablo.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Diablo 2.png"))); // NOI18N
        botonSpicyDiablo.setVerifyInputWhenFocusTarget(false);
        botonSpicyDiablo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        botonSpicyDiablo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonSpicyDiablo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSpicyDiabloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botonSpicyDiablo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonSpicyHot, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botonSpicySweet, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonSpicySalt, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonSpicyDiablo)
                    .addComponent(botonSpicyHot))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonSpicySweet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonSpicySalt, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 320, 180));

        botonRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/back blue.png"))); // NOI18N
        botonRegresar.setBorder(null);
        botonRegresar.setBorderPainted(false);
        botonRegresar.setContentAreaFilled(false);
        botonRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 590, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoIngredientes.png"))); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1020, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo6ActionPerformed
    }//GEN-LAST:event_combo6ActionPerformed

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        this.unlock1.setEnabled(true);
        this.combo1.setEnabled(false);

        lista.add(0, combo1.getSelectedItem());

        String x = (String) combo1.getSelectedItem();
        listaCombo.remove(x);
        remueveItems();
        updateCombos();

        add1.setEnabled(false);
    }//GEN-LAST:event_add1ActionPerformed

    private void combo7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo7ActionPerformed

    private void combo8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo8ActionPerformed

    private void combo9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo9ActionPerformed

    private void combo10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo10ActionPerformed

    private void combo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo2ActionPerformed

    private void unlock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock1ActionPerformed
        try {
            this.combo1.setEnabled(true);
            this.unlock1.setEnabled(false);
            String x = (String) lista.get(0);
            listaCombo.add(x);

            remueveItems();
            updateCombos();
            lista.remove(0);
            add1.setEnabled(true);

        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_unlock1ActionPerformed

    private void unlock2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock2ActionPerformed
        try {
            this.unlock2.setEnabled(false);
            this.combo2.setEnabled(true);
            String x = (String) lista.get(1);
            listaCombo.add(x);
            remueveItems();
            updateCombos();
            lista.remove(1);
            add2.setEnabled(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_unlock2ActionPerformed

    private void unlock3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock3ActionPerformed
        try {
            this.unlock3.setEnabled(false);
            this.combo3.setEnabled(true);
            String x = (String) lista.get(2);
            listaCombo.add(x);
            remueveItems();
            updateCombos();
            lista.remove(2);
            add3.setEnabled(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }

    }//GEN-LAST:event_unlock3ActionPerformed

    private void unlock4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock4ActionPerformed
        try {

            this.unlock4.setEnabled(false);
            this.combo4.setEnabled(true);
            String x = (String) lista.get(3);
            listaCombo.add(x);
            remueveItems();
            updateCombos();
            lista.remove(3);
            add4.setEnabled(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }

    }//GEN-LAST:event_unlock4ActionPerformed

    private void unlock5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock5ActionPerformed
        try {
            this.unlock5.setEnabled(false);
            this.combo5.setEnabled(true);
            String x = (String) lista.get(4);
            listaCombo.add(x);
            remueveItems();
            updateCombos();
            lista.remove(4);
            add5.setEnabled(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_unlock5ActionPerformed

    private void unlock6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock6ActionPerformed
        try {
            this.unlock6.setEnabled(false);
            this.combo6.setEnabled(true);
            String x = (String) lista.get(5);
            listaCombo.add(x);
            remueveItems();
            updateCombos();
            lista.remove(5);
            add6.setEnabled(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_unlock6ActionPerformed

    private void unlock7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock7ActionPerformed
        try {
            this.unlock7.setEnabled(false);
            this.combo7.setEnabled(true);
            String x = (String) lista.get(6);
            listaCombo.add(x);
            remueveItems();
            updateCombos();
            lista.remove(6);
            add7.setEnabled(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_unlock7ActionPerformed

    private void unlock8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock8ActionPerformed
        try {
            this.unlock8.setEnabled(false);
            this.combo8.setEnabled(true);
            String x = (String) lista.get(7);
            listaCombo.add(x);
            remueveItems();
            updateCombos();
            lista.remove(7);
            add8.setEnabled(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_unlock8ActionPerformed

    private void unlock9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock9ActionPerformed
        try {
            this.unlock9.setEnabled(false);
            this.combo9.setEnabled(true);
            String x = (String) lista.get(8);
            listaCombo.add(x);
            remueveItems();
            updateCombos();
            lista.remove(8);
            add9.setEnabled(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_unlock9ActionPerformed

    private void unlock10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlock10ActionPerformed
        try {
            this.unlock10.setEnabled(false);
            this.combo10.setEnabled(true);
            String x = (String) lista.get(9);
            listaCombo.add(x);
            remueveItems();
            updateCombos();
            lista.remove(9);
            add10.setEnabled(true);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_unlock10ActionPerformed

    private void add2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add2ActionPerformed
        try {
            this.unlock2.setEnabled(true);
            this.combo2.setEnabled(false);
            lista.add(0, combo2.getSelectedItem());
            String x = (String) combo2.getSelectedItem();
            listaCombo.remove(x);
            remueveItems();
            updateCombos();

            add2.setEnabled(false);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_add2ActionPerformed

    private void add3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add3ActionPerformed
        try {
            this.unlock3.setEnabled(true);
            this.combo3.setEnabled(false);
            lista.add(0, combo3.getSelectedItem());

            String x = (String) combo3.getSelectedItem();
            listaCombo.remove(x);

            remueveItems();
            updateCombos();

            add3.setEnabled(false);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_add3ActionPerformed

    private void add4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add4ActionPerformed
        try {
            this.unlock4.setEnabled(true);
            this.combo4.setEnabled(false);
            lista.add(0, combo4.getSelectedItem());

            String x = (String) combo4.getSelectedItem();
            listaCombo.remove(x);

            remueveItems();
            updateCombos();

            add4.setEnabled(false);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_add4ActionPerformed

    private void add5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add5ActionPerformed
        try {
            this.unlock5.setEnabled(true);
            this.combo5.setEnabled(false);
            lista.add(0, combo5.getSelectedItem());

            String x = (String) combo5.getSelectedItem();
            listaCombo.remove(x);

            remueveItems();
            updateCombos();

            add5.setEnabled(false);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_add5ActionPerformed

    private void add6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add6ActionPerformed
        try {
            this.unlock6.setEnabled(true);
            this.combo6.setEnabled(false);
            lista.add(0, combo6.getSelectedItem());

            String x = (String) combo6.getSelectedItem();
            listaCombo.remove(x);

            remueveItems();
            updateCombos();

            add6.setEnabled(false);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_add6ActionPerformed

    private void add7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add7ActionPerformed

        try {
            this.unlock7.setEnabled(true);
            this.combo7.setEnabled(false);
            lista.add(0, combo7.getSelectedItem());

            String x = (String) combo7.getSelectedItem();
            listaCombo.remove(x);

            remueveItems();
            updateCombos();

            add7.setEnabled(false);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_add7ActionPerformed

    private void add8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add8ActionPerformed

        try {
            this.unlock8.setEnabled(true);
            this.combo8.setEnabled(false);
            lista.add(0, combo8.getSelectedItem());

            String x = (String) combo8.getSelectedItem();
            listaCombo.remove(x);

            remueveItems();
            updateCombos();

            add8.setEnabled(false);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_add8ActionPerformed

    private void add9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add9ActionPerformed
        try {
            this.unlock9.setEnabled(true);
            this.combo9.setEnabled(false);
            lista.add(0, combo9.getSelectedItem());

            String x = (String) combo9.getSelectedItem();
            listaCombo.remove(x);

            remueveItems();
            updateCombos();

            add9.setEnabled(false);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_add9ActionPerformed

    private void add10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add10ActionPerformed
        try {
            this.unlock10.setEnabled(true);
            this.combo10.setEnabled(false);
            lista.add(0, combo10.getSelectedItem());

            String x = (String) combo10.getSelectedItem();
            listaCombo.remove(x);

            remueveItems();
            updateCombos();

            add10.setEnabled(false);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Verifique la selección de los ingredientes");
        }


    }//GEN-LAST:event_add10ActionPerformed

    private void combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo1ActionPerformed

    private void comboVasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboVasoActionPerformed
        if (comboVaso.getSelectedItem().equals("chico")) {

            añadirAgregados();

            combo1.setEnabled(true);
            add1.setEnabled(true);
            unlock1.setEnabled(false);
            combo2.setEnabled(true);
            add2.setEnabled(true);
            unlock2.setEnabled(false);
            combo3.setEnabled(true);
            add3.setEnabled(true);
            unlock3.setEnabled(false);
            combo4.setEnabled(true);
            add4.setEnabled(true);
            unlock4.setEnabled(false);
            combo5.setEnabled(true);
            add5.setEnabled(true);
            unlock5.setEnabled(false);
            combo6.setEnabled(true);
            add6.setEnabled(true);
            unlock6.setEnabled(false);
            combo7.setEnabled(false);
            add7.setEnabled(false);
            unlock7.setEnabled(false);
            combo7.setEnabled(false);
            add7.setEnabled(false);
            unlock7.setEnabled(false);
            combo8.setEnabled(false);
            add8.setEnabled(false);
            unlock8.setEnabled(false);
            combo9.setEnabled(false);
            add9.setEnabled(false);
            unlock9.setEnabled(false);
            combo10.setEnabled(false);
            add10.setEnabled(false);
            unlock10.setEnabled(false);
            remueveItems();
            updateCombos();
            lista.removeAllElements();
        }

        if (comboVaso.getSelectedItem().equals("mediano")) {

            añadirAgregados();
            combo1.setEnabled(true);
            add1.setEnabled(true);
            unlock1.setEnabled(false);
            combo2.setEnabled(true);
            add2.setEnabled(true);
            unlock2.setEnabled(false);
            combo3.setEnabled(true);
            add3.setEnabled(true);
            unlock3.setEnabled(false);
            combo4.setEnabled(true);
            add4.setEnabled(true);
            unlock4.setEnabled(false);
            combo5.setEnabled(true);
            add5.setEnabled(true);
            unlock5.setEnabled(false);
            combo6.setEnabled(true);
            add6.setEnabled(true);
            unlock6.setEnabled(false);

            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            combo9.setEnabled(false);
            add9.setEnabled(false);
            unlock9.setEnabled(false);
            combo10.setEnabled(false);
            add10.setEnabled(false);
            unlock10.setEnabled(false);
            remueveItems();
            updateCombos();
            lista.removeAllElements();

        }
        if (comboVaso.getSelectedItem().equals("grande")) {
            añadirAgregados();

            combo1.setEnabled(true);
            add1.setEnabled(true);
            unlock1.setEnabled(false);
            combo2.setEnabled(true);
            add2.setEnabled(true);
            unlock2.setEnabled(false);
            combo3.setEnabled(true);
            add3.setEnabled(true);
            unlock3.setEnabled(false);
            combo4.setEnabled(true);
            add4.setEnabled(true);
            unlock4.setEnabled(false);
            combo5.setEnabled(true);
            add5.setEnabled(true);
            unlock5.setEnabled(false);
            combo6.setEnabled(true);
            add6.setEnabled(true);
            unlock6.setEnabled(false);
            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            combo9.setEnabled(true);
            add9.setEnabled(true);
            unlock9.setEnabled(false);
            combo10.setEnabled(true);
            add10.setEnabled(true);
            unlock10.setEnabled(false);
            remueveItems();
            updateCombos();
            lista.removeAllElements();

        }

    }//GEN-LAST:event_comboVasoActionPerformed

    private void botonListoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListoActionPerformed
        ingredientes = "";
        for (int i = 0; i < lista.getSize(); i++) {
            String name = (String) lista.getElementAt(i);
            System.out.println(name);
            rs = facade.BuscarIngrediente(name);
            try {
                if (rs.next()) {
                    ingrediente = new Ingrediente(rs.getInt(1), rs.getString(2), rs.getFloat(3));
                    VentanaVenta.listaIng.add(ingrediente);
                }
            } catch (SQLException ex) {
                Logger.getLogger(VentanaVentaIngredientes.class.getName()).log(Level.SEVERE, null, ex);
            }

            //   VentanaVenta.listaIng.add(ing);
            ingredientes += (String) lista.getElementAt(i) + ",\n";
            // System.out.println(ingredientes);
        }
        try {
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(VentanaVentaIngredientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        String tamaño = (String) comboVaso.getSelectedItem();

        rs = facade.BuscarVaso(tamaño);
        try {
            while (rs.next()) {

                vaso = new Vaso(rs.getInt("id_vaso"), rs.getString("tamaño"), rs.getFloat("precio"));

                VentanaVenta.modelo.addElement(vaso);
                costo = vaso.getPrecio();
                VentanaVenta.costoVenta += costo;
                VentanaVenta.generarCosto();
                VentanaVenta.descripcion += "Vaso " + vaso.getTamaño() + " Con ingredientes: " + ingredientes;
                VentanaVenta.vaso = vaso;
            }
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(VentanaVentaBebidas.class.getName()).log(Level.SEVERE, null, ex);
        }
        VentanaVenta.listaVaso.add(vaso);
        this.dispose();
    }//GEN-LAST:event_botonListoActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Esta seguro que desea Cancelar ?", "Cancelar",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {

            botonSpicyDiablo.setEnabled(true);
            botonSpicyHot.setEnabled(true);
            botonSpicySweet.setEnabled(true);
            botonSpicySalt.setEnabled(true);
            comboVaso.setEnabled(true);
            costo = 0.0;
            añadirAgregados();

            if (comboVaso.getSelectedItem().equals("chico")) {
                lista.setSize(6);
                combo1.setEnabled(true);
                add1.setEnabled(true);
                unlock1.setEnabled(false);
                combo2.setEnabled(true);
                add2.setEnabled(true);
                unlock2.setEnabled(false);
                combo3.setEnabled(true);
                add3.setEnabled(true);
                unlock3.setEnabled(false);
                combo4.setEnabled(true);
                add4.setEnabled(true);
                unlock4.setEnabled(false);
                combo5.setEnabled(true);
                add5.setEnabled(true);
                unlock5.setEnabled(false);
                combo6.setEnabled(true);
                add6.setEnabled(true);
                unlock6.setEnabled(false);
                remueveItems();
                updateCombos();
            }
            if (comboVaso.getSelectedItem().equals("mediano")) {

                combo1.setEnabled(true);
                add1.setEnabled(true);
                unlock1.setEnabled(true);
                combo2.setEnabled(true);
                add2.setEnabled(true);
                unlock2.setEnabled(true);
                combo3.setEnabled(true);
                add3.setEnabled(true);
                unlock3.setEnabled(true);
                combo4.setEnabled(true);
                add4.setEnabled(true);
                unlock4.setEnabled(true);
                combo5.setEnabled(true);
                add5.setEnabled(true);
                unlock5.setEnabled(true);
                combo6.setEnabled(true);
                add6.setEnabled(true);
                unlock6.setEnabled(true);

                combo7.setEnabled(true);
                add7.setEnabled(true);
                unlock7.setEnabled(true);
                combo8.setEnabled(true);
                add8.setEnabled(true);
                unlock8.setEnabled(true);
                combo9.setEnabled(false);
                add9.setEnabled(false);
                unlock9.setEnabled(false);
                combo10.setEnabled(false);
                add10.setEnabled(false);
                unlock10.setEnabled(false);
                remueveItems();
                updateCombos();

            }

            if (comboVaso.getSelectedItem().equals("grande")) {
                añadirAgregados();

                combo1.setEnabled(true);
                add1.setEnabled(true);
                unlock1.setEnabled(true);
                combo2.setEnabled(true);
                add2.setEnabled(true);
                unlock2.setEnabled(true);
                combo3.setEnabled(true);
                add3.setEnabled(true);
                unlock3.setEnabled(true);
                combo4.setEnabled(true);
                add4.setEnabled(true);
                unlock4.setEnabled(true);
                combo5.setEnabled(true);
                add5.setEnabled(true);
                unlock5.setEnabled(true);
                combo6.setEnabled(true);
                add6.setEnabled(true);
                unlock6.setEnabled(true);
                combo7.setEnabled(true);
                add7.setEnabled(true);
                unlock7.setEnabled(false);
                combo8.setEnabled(true);
                add8.setEnabled(true);
                unlock8.setEnabled(false);
                combo9.setEnabled(true);
                add9.setEnabled(true);
                unlock9.setEnabled(false);
                combo10.setEnabled(true);
                add10.setEnabled(true);
                unlock10.setEnabled(false);
                remueveItems();
                updateCombos();
            }

            lista.removeAllElements();
        }
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonSpicyDiabloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSpicyDiabloActionPerformed
        //ingredientes diablo takiz fuego, aros enchilosos ,
        //piña enchilada, chips jalapeño ,mango habanero, tamarindo vaina
        botonSpicyDiablo.setEnabled(false);
        botonSpicyHot.setEnabled(false);
        botonSpicySweet.setEnabled(false);
        botonSpicySalt.setEnabled(false);

        int seleccion = JOptionPane.showOptionDialog(
                null,
                "Seleccionar Tamaño ",
                "Selector de Vasos",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Chico", "Mediano", "Grande"}, // null para YES, NO y CANCEL
                "opcion x");
        if (seleccion == 0) {
            comboVaso.setSelectedItem("chico");
            String x = (String) combo1.getItemAt(0);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo2.getItemAt(28);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo3.getItemAt(21);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo4.getItemAt(7);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo5.getItemAt(17);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo6.getItemAt(30);
            lista.add(0, x6);
            listaCombo.remove(x6);
            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();
            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            comboVaso.setEnabled(false);

        }
        if (seleccion == 1) {
            comboVaso.setSelectedItem("mediano");
            String x = (String) combo1.getItemAt(0);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(28);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(21);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(7);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(17);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(30);
            lista.add(0, x6);
            listaCombo.remove(x6);

            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            comboVaso.setEnabled(false);

            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();

        }
        if (seleccion == 2) {
            comboVaso.setSelectedItem("grande");
            String x = (String) combo1.getItemAt(0);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(28);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(21);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(7);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(17);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(30);
            lista.add(0, x6);
            listaCombo.remove(x6);

            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            combo9.setEnabled(true);
            add9.setEnabled(true);
            unlock9.setEnabled(false);
            combo10.setEnabled(true);
            add10.setEnabled(true);
            unlock10.setEnabled(false);

            comboVaso.setEnabled(false);

            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();
        }

    }//GEN-LAST:event_botonSpicyDiabloActionPerformed

    private void botonSpicyHotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSpicyHotActionPerformed
        botonSpicyDiablo.setEnabled(false);
        botonSpicyHot.setEnabled(false);
        botonSpicySweet.setEnabled(false);
        botonSpicySalt.setEnabled(false);

        int seleccion = JOptionPane.showOptionDialog(
                null,
                "Seleccionar Tamaño ",
                "Selector de Vasos",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Chico", "Mediano", "Grande"}, // null para YES, NO y CANCEL
                "opcion x");
        if (seleccion == 0) {
            comboVaso.setSelectedItem("chico");
            String x = (String) combo1.getItemAt(18);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(10);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(8);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(1);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(6);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(2);
            lista.add(0, x6);
            listaCombo.remove(x6);
            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();
            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            comboVaso.setEnabled(false);

        }
        if (seleccion == 1) {
            comboVaso.setSelectedItem("mediano");
            String x = (String) combo1.getItemAt(18);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(10);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(8);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(1);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(6);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(2);
            lista.add(0, x6);
            listaCombo.remove(x6);

            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            comboVaso.setEnabled(false);

            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();

        }
        if (seleccion == 2) {
            comboVaso.setSelectedItem("grande");
            String x = (String) combo1.getItemAt(18);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(10);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(8);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(1);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(6);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(2);
            lista.add(0, x6);
            listaCombo.remove(x6);

            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            combo9.setEnabled(true);
            add9.setEnabled(true);
            unlock9.setEnabled(false);
            combo10.setEnabled(true);
            add10.setEnabled(true);
            unlock10.setEnabled(false);

            comboVaso.setEnabled(false);

            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();
        }

    }//GEN-LAST:event_botonSpicyHotActionPerformed

    private void botonSpicySweetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSpicySweetActionPerformed
        botonSpicyDiablo.setEnabled(false);
        botonSpicyHot.setEnabled(false);
        botonSpicySweet.setEnabled(false);
        botonSpicySalt.setEnabled(false);

        int seleccion = JOptionPane.showOptionDialog(
                null,
                "Seleccionar Tamaño ",
                "Selector de Vasos",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Chico", "Mediano", "Grande"}, // null para YES, NO y CANCEL
                "opcion x");
        if (seleccion == 0) {
            comboVaso.setSelectedItem("chico");
            String x = (String) combo1.getItemAt(19);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(12);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(13);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(14);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(20);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(9);
            lista.add(0, x6);
            listaCombo.remove(x6);
            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();
            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            comboVaso.setEnabled(false);

        }
        if (seleccion == 1) {
            comboVaso.setSelectedItem("mediano");
            String x = (String) combo1.getItemAt(19);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(12);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(13);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(14);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(20);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(9);
            lista.add(0, x6);
            listaCombo.remove(x6);

            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            comboVaso.setEnabled(false);

            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();

        }
        if (seleccion == 2) {
            comboVaso.setSelectedItem("grande");
            String x = (String) combo1.getItemAt(19);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(12);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(13);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(14);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(20);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(9);
            lista.add(0, x6);
            listaCombo.remove(x6);

            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            combo9.setEnabled(true);
            add9.setEnabled(true);
            unlock9.setEnabled(false);
            combo10.setEnabled(true);
            add10.setEnabled(true);
            unlock10.setEnabled(false);

            comboVaso.setEnabled(false);

            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();
        }
    }//GEN-LAST:event_botonSpicySweetActionPerformed

    private void botonSpicySaltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSpicySaltActionPerformed
        botonSpicyDiablo.setEnabled(false);
        botonSpicyHot.setEnabled(false);
        botonSpicySweet.setEnabled(false);
        botonSpicySalt.setEnabled(false);

        int seleccion = JOptionPane.showOptionDialog(
                null,
                "Seleccionar Tamaño ",
                "Selector de Vasos",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Chico", "Mediano", "Grande"}, // null para YES, NO y CANCEL
                "opcion x");
        if (seleccion == 0) {
            comboVaso.setSelectedItem("chico");
            String x = (String) combo1.getItemAt(26);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(1);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(4);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(7);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(11);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(29);
            lista.add(0, x6);
            listaCombo.remove(x6);

            remueveItems();
            updateCombos();
            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            comboVaso.setEnabled(false);

        }
        if (seleccion == 1) {
            comboVaso.setSelectedItem("mediano");
            String x = (String) combo1.getItemAt(26);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(1);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(4);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(7);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(11);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(29);
            lista.add(0, x6);
            listaCombo.remove(x6);

            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            comboVaso.setEnabled(false);

            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();

        }
        if (seleccion == 2) {
            comboVaso.setSelectedItem("grande");
            String x = (String) combo1.getItemAt(26);
            lista.add(0, x);
            listaCombo.remove(x);
            String x2 = (String) combo1.getItemAt(1);
            lista.add(0, x2);
            listaCombo.remove(x2);
            String x3 = (String) combo1.getItemAt(4);
            lista.add(0, x3);
            listaCombo.remove(x3);
            String x4 = (String) combo1.getItemAt(7);
            lista.add(0, x4);
            listaCombo.remove(x4);
            String x5 = (String) combo1.getItemAt(11);
            lista.add(0, x5);
            listaCombo.remove(x5);
            String x6 = (String) combo1.getItemAt(29);
            lista.add(0, x6);
            listaCombo.remove(x6);

            combo1.setEnabled(false);
            add1.setEnabled(false);
            unlock1.setEnabled(false);
            combo2.setEnabled(false);
            add2.setEnabled(false);
            unlock2.setEnabled(false);
            combo3.setEnabled(false);
            add3.setEnabled(false);
            unlock3.setEnabled(false);
            combo4.setEnabled(false);
            add4.setEnabled(false);
            unlock4.setEnabled(false);
            combo5.setEnabled(false);
            add5.setEnabled(false);
            unlock5.setEnabled(false);
            combo6.setEnabled(false);
            add6.setEnabled(false);
            unlock6.setEnabled(false);
            combo7.setEnabled(true);
            add7.setEnabled(true);
            unlock7.setEnabled(false);
            combo8.setEnabled(true);
            add8.setEnabled(true);
            unlock8.setEnabled(false);
            combo9.setEnabled(true);
            add9.setEnabled(true);
            unlock9.setEnabled(false);
            combo10.setEnabled(true);
            add10.setEnabled(true);
            unlock10.setEnabled(false);

            comboVaso.setEnabled(false);

            botonSpicyDiablo.setEnabled(false);
            remueveItems();
            updateCombos();
        }
    }//GEN-LAST:event_botonSpicySaltActionPerformed

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "¿ Desea cancelar el pedido ?", "Mensaje",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            this.dispose();

        }
    }//GEN-LAST:event_botonRegresarActionPerformed

 


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add1;
    private javax.swing.JButton add10;
    private javax.swing.JButton add2;
    private javax.swing.JButton add3;
    private javax.swing.JButton add4;
    private javax.swing.JButton add5;
    private javax.swing.JButton add6;
    private javax.swing.JButton add7;
    private javax.swing.JButton add8;
    private javax.swing.JButton add9;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonListo;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JButton botonSpicyDiablo;
    private javax.swing.JButton botonSpicyHot;
    private javax.swing.JButton botonSpicySalt;
    private javax.swing.JButton botonSpicySweet;
    private javax.swing.JComboBox combo1;
    private javax.swing.JComboBox combo10;
    private javax.swing.JComboBox combo2;
    private javax.swing.JComboBox combo3;
    private javax.swing.JComboBox combo4;
    private javax.swing.JComboBox combo5;
    private javax.swing.JComboBox combo6;
    private javax.swing.JComboBox combo7;
    private javax.swing.JComboBox combo8;
    private javax.swing.JComboBox combo9;
    public javax.swing.JComboBox comboVaso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JList jList1;
    public static DefaultListModel lista;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton unlock1;
    private javax.swing.JButton unlock10;
    private javax.swing.JButton unlock2;
    private javax.swing.JButton unlock3;
    private javax.swing.JButton unlock4;
    private javax.swing.JButton unlock5;
    private javax.swing.JButton unlock6;
    private javax.swing.JButton unlock7;
    private javax.swing.JButton unlock8;
    private javax.swing.JButton unlock9;
    // End of variables declaration//GEN-END:variables
}
